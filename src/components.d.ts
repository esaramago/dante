/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DntButton {
        "variant": string;
    }
    interface DntHeader {
        "name": string;
    }
    interface DntInput {
        "error": string;
        "label": string;
        "placeholder": string;
        "required": boolean;
        "type": string;
        "value": string;
    }
    interface DntLabel {
        "htmlId": string;
        "required": boolean;
    }
    interface DntNotification {
        "type": string;
    }
}
export interface DntButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDntButtonElement;
}
export interface DntInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDntInputElement;
}
declare global {
    interface HTMLDntButtonElement extends Components.DntButton, HTMLStencilElement {
    }
    var HTMLDntButtonElement: {
        prototype: HTMLDntButtonElement;
        new (): HTMLDntButtonElement;
    };
    interface HTMLDntHeaderElement extends Components.DntHeader, HTMLStencilElement {
    }
    var HTMLDntHeaderElement: {
        prototype: HTMLDntHeaderElement;
        new (): HTMLDntHeaderElement;
    };
    interface HTMLDntInputElement extends Components.DntInput, HTMLStencilElement {
    }
    var HTMLDntInputElement: {
        prototype: HTMLDntInputElement;
        new (): HTMLDntInputElement;
    };
    interface HTMLDntLabelElement extends Components.DntLabel, HTMLStencilElement {
    }
    var HTMLDntLabelElement: {
        prototype: HTMLDntLabelElement;
        new (): HTMLDntLabelElement;
    };
    interface HTMLDntNotificationElement extends Components.DntNotification, HTMLStencilElement {
    }
    var HTMLDntNotificationElement: {
        prototype: HTMLDntNotificationElement;
        new (): HTMLDntNotificationElement;
    };
    interface HTMLElementTagNameMap {
        "dnt-button": HTMLDntButtonElement;
        "dnt-header": HTMLDntHeaderElement;
        "dnt-input": HTMLDntInputElement;
        "dnt-label": HTMLDntLabelElement;
        "dnt-notification": HTMLDntNotificationElement;
    }
}
declare namespace LocalJSX {
    interface DntButton {
        "onDClick"?: (event: DntButtonCustomEvent<any>) => void;
        "variant"?: string;
    }
    interface DntHeader {
        "name"?: string;
    }
    interface DntInput {
        "error"?: string;
        "label": string;
        "onDChange"?: (event: DntInputCustomEvent<any>) => void;
        "onDInput"?: (event: DntInputCustomEvent<any>) => void;
        "placeholder"?: string;
        "required"?: boolean;
        "type"?: string;
        "value"?: string;
    }
    interface DntLabel {
        "htmlId": string;
        "required"?: boolean;
    }
    interface DntNotification {
        "type"?: string;
    }
    interface IntrinsicElements {
        "dnt-button": DntButton;
        "dnt-header": DntHeader;
        "dnt-input": DntInput;
        "dnt-label": DntLabel;
        "dnt-notification": DntNotification;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dnt-button": LocalJSX.DntButton & JSXBase.HTMLAttributes<HTMLDntButtonElement>;
            "dnt-header": LocalJSX.DntHeader & JSXBase.HTMLAttributes<HTMLDntHeaderElement>;
            "dnt-input": LocalJSX.DntInput & JSXBase.HTMLAttributes<HTMLDntInputElement>;
            "dnt-label": LocalJSX.DntLabel & JSXBase.HTMLAttributes<HTMLDntLabelElement>;
            "dnt-notification": LocalJSX.DntNotification & JSXBase.HTMLAttributes<HTMLDntNotificationElement>;
        }
    }
}
